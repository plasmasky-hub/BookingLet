pipeline {
    agent any
    environment {
        ENVIRONMENT = 'uat'
        AWS_ACCOUNT_ID="544863999112"
        AWS_DEFAULT_REGION="ap-southeast-2" 
	CLUSTER_NAME="bookinglet-cluster"
	SERVICE_NAME="bookinglet-service"
	TASK_DEFINITION_NAME="bookinglet-task"
        IMAGE_REPO_NAME="bookinglet-repo"
        IMAGE_TAG="latest"
        DESIRED_COUNT = "1"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
	    registryCredential = "christina"
    }
    stages {
        stage('npm install') {
            steps{
                dir('./back_end/') {
                    echo "Running test"
                    sh 'npm install'
                }
            }
        }
        stage('Building image') {
            steps{
                dir('./back_end'){
                    echo "Building images..."
                    sh 'docker build -t ${IMAGE_REPO_NAME} .' 
                }
            }
        }
        stage('Push image') {
            steps{
                dir('./back_end'){
                    withAWS(credentials: registryCredential, region: "${AWS_DEFAULT_REGION}") {
                        echo "Push image to ECR"
                        sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com'
                        sh 'docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}'
                        sh 'docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}' 
                        sh 'aws ecs update-service --cluster "${CLUSTER_NAME}" --service "${SERVICE_NAME}" --task-definition "${TASK_DEFINITION_NAME}" --desired-count "${DESIRED_COUNT}"'
                    }
                }
            }
        }    
    }
    post {
        always {
            cleanWs()
        }
        success {
            emailext attachLog: true, 
            body: 'front_end pipeline', 
            mimeType: 'text/HTML', 
            subject: 'front_end pipeline', 
            to: 'connie0972001@gmail.com',
            recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']]
        } 
    }
}
