//Time picking
  const prevOrdersAll = [];
  const prevOrdersThisYear = [];
  const prevOrdersThisMonth = [];

  let currentTime = new Date();
  let currentYear = currentTime.getFullYear();
  let currentMonth = currentTime.getMonth();

  orders = orders.filter((order) => {
    let orderYear = order.orderTime.date.getFullYear() + '';
    let orderMonth = order.orderTime.date.getMonth() < 9 ? ('0' + (order.orderTime.date.getMonth() + 1)) : ((order.orderTime.date.getMonth() + 1) + '');
    let orderDate = order.orderTime.date.getDate() < 10 ? ('0' + order.orderTime.date.getDate()) : (order.orderTime.date.getDate() + '')

    let startTime = order.orderTime.startTime.length < 2 ? ('000' + order.orderTime.startTime)
      : order.orderTime.startTime.length < 3 ? ('00' + order.orderTime.startTime)
        : order.orderTime.startTime.length < 4 ? ('0' + order.orderTime.startTime)
          : order.orderTime.startTime;

    let orderHour = startTime.substring(0, 2);
    let orderMinute = startTime.substring(2, 4);
    let orderSecond = '00';

    let orderTime = new Date(`${orderYear}-${orderMonth}-${orderDate} ${orderHour}:${orderMinute}:${orderSecond}`)
    if (!(orderTime > currentTime)) { prevOrdersAll.push(order) };
    if (!(orderTime > currentTime) && order.orderTime.date.getFullYear() === currentYear) { prevOrdersThisYear.push(order) };
    if (!(orderTime > currentTime) && order.orderTime.date.getFullYear() === currentYear && order.orderTime.date.getMonth() === currentMonth) { prevOrdersThisMonth.push(order) };
    return orderTime > currentTime;
  });


  const resultOfOrders = Grouping(orders);
  const resultOfPrevOrdersAll = Grouping(prevOrdersAll);
  const resultOfPrevOrdersThisYear = Grouping(prevOrdersThisYear);
  const resultOfPrevOrdersThisMonth = Grouping(prevOrdersThisMonth);

  function Grouping(orders) {
    const serviceInfoArr = [];
    orders.map((order) => {
      if (serviceInfoArr.indexOf(order.serviceInfoId.name) < 0) {
        serviceInfoArr.push(order.serviceInfoId.name);
      };
    });

    const serviceInfoGroup = {};
    serviceInfoArr.map((service) => {
      serviceInfoGroup[service] = [];
    })

    Object.keys(serviceInfoGroup).forEach((serviceKey) => {
      orders.map((order) => {
        if (order.serviceInfoId.name === serviceKey) {
          serviceInfoGroup[serviceKey].push(order);
        };
      });
    })
    return ({ serviceInfoArr, serviceInfoGroup })
  }